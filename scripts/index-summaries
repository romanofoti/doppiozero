#!/usr/bin/env python3
"""CLI wrapper to bulk index multiple GitHub conversations (file or stdin)."""
import argparse
from doppiozero.utils.utils import read_urls_from_stdin_or_file


def index_summaries(
    urls,
    executive_summary_prompt_path,
    topics_prompt_path,
    collection,
    cache_path=None,
    updated_at=None,
    model=None,
    qdrant_url=None,
    max_topics=None,
    skip_if_up_to_date=False,
):
    from doppiozero.content_service import content_manager

    for url in urls:
        try:
            content_manager.index_summary(
                conversation_url=url,
                executive_summary_prompt_path=executive_summary_prompt_path,
                topics_prompt_path=topics_prompt_path,
                collection=collection,
                cache_path=cache_path,
                updated_at=updated_at,
                model=model,
                qdrant_url=qdrant_url,
                max_topics=max_topics,
                skip_if_up_to_date=skip_if_up_to_date,
            )
        except Exception as e:
            print(f"Error indexing summary for {url}: {e}")


def main():
    parser = argparse.ArgumentParser(prog="index-summaries")
    parser.add_argument(
        "--file",
        help="Path to file with URLs (one per line) or JSON array (if omitted, read from stdin)",
        default=None,
    )
    parser.add_argument("--executive-summary-prompt-path", required=True)
    parser.add_argument("--topics-prompt-path", required=True)
    parser.add_argument("--collection", required=True)
    parser.add_argument("--cache-path", default=None)
    parser.add_argument("--updated-at", default=None)
    parser.add_argument("--model", default=None)
    parser.add_argument("--qdrant-url", default=None)
    parser.add_argument("--max-topics", type=int, default=None)
    parser.add_argument("--skip-if-up-to-date", action="store_true")
    args = parser.parse_args()

    urls = read_urls_from_stdin_or_file(args.file)
    index_summaries(
        urls,
        args.executive_summary_prompt_path,
        args.topics_prompt_path,
        args.collection,
        cache_path=args.cache_path,
        updated_at=args.updated_at,
        model=args.model,
        qdrant_url=args.qdrant_url,
        max_topics=args.max_topics,
        skip_if_up_to_date=args.skip_if_up_to_date,
    )


if __name__ == "__main__":
    main()
