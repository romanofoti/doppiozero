#!/usr/bin/env python3
"""CLI wrapper to fetch multiple GitHub conversations (reads URLs from file or stdin)."""
import argparse
import json
from typing import List, Optional

from doppiozero.utils.utils import read_urls_from_stdin_or_file
from doppiozero.contents import content_fetcher


def fetch_github_conversations(
    urls: List[str], cache_path: Optional[str] = None, updated_at: Optional[str] = None
):
    results = []

    for url in urls:
        try:
            convo = content_fetcher.fetch_github_conversation(
                url, cache_path=cache_path, updated_at=updated_at
            )
            if convo:
                results.append(convo)
        except Exception as exc:  # pragma: no cover - simple CLI error reporting
            print(f"Error fetching conversation for {url}: {exc}")
    return results


def main():
    parser = argparse.ArgumentParser(prog="fetch-github-conversations")
    parser.add_argument(
        "--file",
        help="Path to file with URLs (one per line). If omitted, read from stdin",
        default=None,
    )
    parser.add_argument("--cache-path", default=None)
    parser.add_argument("--updated-at", default=None)
    args = parser.parse_args()

    urls = read_urls_from_stdin_or_file(args.file)
    results = fetch_github_conversations(
        urls, cache_path=args.cache_path, updated_at=args.updated_at
    )
    print(json.dumps(results, indent=2))


if __name__ == "__main__":
    main()
