#!/usr/bin/env python3
"""CLI wrapper to fetch multiple GitHub conversations (reads URLs from file or stdin)."""
import argparse
import json
from doppiozero.utils.utils import read_urls_from_stdin_or_file


def fetch_github_conversations(urls, cache_path=None, updated_at=None):
    results = []
    from urllib.error import URLError

    for url in urls:
        try:
            # Delegate to the package fetch function (PyGithub adapter in fetch module)
            from doppiozero.fetch_github_conversation import fetch_github_conversation

            convo = fetch_github_conversation(url, cache_path=cache_path, updated_at=updated_at)
            if convo:
                results.append(convo)
        except Exception as e:
            print(f"Error fetching conversation for {url}: {e}")
    return results


def main():
    parser = argparse.ArgumentParser(prog="fetch-github-conversations")
    parser.add_argument(
        "--file",
        help="Path to file with URLs (one per line). If omitted, read from stdin",
        default=None,
    )
    parser.add_argument("--cache-path", default=None)
    parser.add_argument("--updated-at", default=None)
    args = parser.parse_args()

    urls = read_urls_from_stdin_or_file(args.file)
    results = fetch_github_conversations(
        urls, cache_path=args.cache_path, updated_at=args.updated_at
    )
    print(json.dumps(results, indent=2))


if __name__ == "__main__":
    main()
