#!/usr/bin/env python3
"""CLI wrapper for create-weekly-note.

Creates a weekly note file from a template by replacing a {{date}} placeholder.
"""
import argparse
import datetime
import os
from typing import Optional


def create_weekly_note(template_path: str, target_dir: str, date: Optional[str] = None) -> None:
    if date is None:
        date_obj = datetime.date.today()
    else:
        try:
            date_obj = datetime.datetime.strptime(date, "%Y-%m-%d").date()
        except ValueError:
            print(f"Invalid date format: {date}. Use YYYY-MM-DD.")
            return

    week_str = date_obj.strftime("Week of %Y-%m-%d")
    try:
        with open(template_path, "r", encoding="utf-8") as f:
            template_content = f.read()
    except Exception as e:
        print(f"Error reading template: {e}")
        return

    note_content = template_content.replace("{{date}}", week_str)
    note_filename = f"{week_str}.md"
    note_path = os.path.join(target_dir, note_filename)
    try:
        os.makedirs(os.path.dirname(note_path) or ".", exist_ok=True)
        with open(note_path, "w", encoding="utf-8") as f:
            f.write(note_content)
        print(f"Weekly note created: {note_path}")
    except Exception as e:
        print(f"Error writing weekly note: {e}")


def main():
    parser = argparse.ArgumentParser(prog="create-weekly-note")
    parser.add_argument("--template-path", required=True)
    parser.add_argument("--target-dir", required=True)
    parser.add_argument("--date", default=None, help="Optional date YYYY-MM-DD")
    args = parser.parse_args()

    create_weekly_note(args.template_path, args.target_dir, date=args.date)


if __name__ == "__main__":
    main()
