#!/usr/bin/env python3
"""CLI wrapper for extracting topics from a GitHub conversation."""
import argparse
import sys


def main():
    parser = argparse.ArgumentParser(prog="extract-topics")
    parser.add_argument("input", help="GitHub URL or owner/repo/type/number")
    parser.add_argument("--topics-prompt-path", required=True, help="Path to topics prompt file")
    parser.add_argument("--cache-path", default=None, help="Cache root directory")
    parser.add_argument(
        "--updated-at", default=None, help="Only fetch if remote is newer than this ISO timestamp"
    )
    parser.add_argument(
        "--max-topics", type=int, default=None, help="Maximum number of topics to return"
    )
    args = parser.parse_args()

    from doppiozero.extract_topics import extract_topics

    try:
        topics = extract_topics(
            args.input,
            topics_prompt_path=args.topics_prompt_path,
            cache_path=args.cache_path,
            updated_at=args.updated_at,
            max_topics=args.max_topics,
        )
        import json

        print(json.dumps(topics))
    except Exception as e:
        print(f"Error: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
